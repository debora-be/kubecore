name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Build
      run: go build -v ./...

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests

  integration-tests:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Create k8s Kind Cluster
      uses: helm/kind-action@v1.8.0
      with:
        cluster_name: "test-cluster"
        wait: 120s
        
    - name: Build Docker image
      run: |
        docker build -t kubecore:test .
        
    - name: Load Docker image into Kind cluster
      run: |
        kind load docker-image kubecore:test --name test-cluster
        
    - name: Install test dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apache2-utils
        
    - name: Verify cluster
      run: |
        kubectl cluster-info
        kubectl get nodes
        
    - name: Run integration tests
      run: |
        chmod +x scripts/*.sh
        ./scripts/ingress-test.sh
        ./scripts/canary-test.sh
        ./scripts/traffic-test.sh
        ./scripts/advanced-load-test.sh

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m