name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache: true
        
    - name: Install dependencies
      run: go mod download

    - name: Verify dependencies
      run: go mod verify

    - name: Run go fmt
      run: if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then exit 1; fi
      
    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Build
      run: go build -v ./...

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.txt
        flags: unittests

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        only-new-issues: true
        skip-cache: true

  integration-tests:
            runs-on: ubuntu-latest
            needs: build-and-test
            steps:
            - uses: actions/checkout@v3
            
            - name: Set up KinD cluster
              uses: helm/kind-action@v1.8.0
        
            - name: Build and load Docker image
              run: |
                docker build -t kubecore:test .
                kind load docker-image kubecore:test
        
            - name: Install test dependencies
              run: |
                sudo apt-get update
                sudo apt-get install -y apache2-utils  # for ab (Apache Benchmark)
        
            - name: Run integration tests
              run: |
                chmod +x scripts/*.sh
                
                echo "Running ingress tests..."
                ./scripts/ingress-test.sh
                
                echo "Running canary tests..."
                ./scripts/canary-test.sh
                
                echo "Running traffic tests..."
                ./scripts/traffic-test.sh
                
                echo "Running load tests..."
                ./scripts/advanced-load-test.sh

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: ./...